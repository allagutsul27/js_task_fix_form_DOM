{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","formatWord","word","result","slice","toUpperCase","i","length","toLowerCase","map","input","label","createElement","className","htmlFor","id","textContent","name","before","placeholder"],"mappings":";AAAA,aA2BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzBD,IAAMA,EAASC,SAASC,iBAAiB,SAazC,SAASC,EAAWC,GAGb,IAFDC,IAAAA,EAASD,EAAKE,MAAM,EAAG,GAAGC,cAErBC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAC1BJ,EAAKI,KAAOJ,EAAKI,GAAGE,cACvBL,GAAU,IAAMD,EAAKI,GAAGE,cAExBL,GAAUD,EAAKI,GAIZH,OAAAA,EAtBT,EAAIL,GAAQW,IAAI,SAAAC,GACRC,IAAAA,EAAQZ,SAASa,cAAc,SAErCD,EAAME,UAAY,CAAC,eACnBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,YAAcf,EAAWS,EAAMO,MACrCP,EAAMQ,OAAOP,GAEbD,EAAMS,YAAclB,EAAWS,EAAMO","file":"main.56da50e1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\n[...inputs].map(input => {\n  const label = document.createElement('label');\n\n  label.className = ['field-label'];\n  label.htmlFor = input.id;\n  label.textContent = formatWord(input.name);\n  input.before(label);\n\n  input.placeholder = formatWord(input.name);\n});\n\nfunction formatWord(word) {\n  let result = word.slice(0, 1).toUpperCase();\n\n  for (let i = 1; i < word.length; i++) {\n    if ((word[i] !== word[i].toLowerCase())) {\n      result += ' ' + word[i].toLowerCase();\n    } else {\n      result += word[i];\n    }\n  }\n\n  return result;\n}\n"]}